import { connectCoinCap } from './api/coincap';
import BigNumber from 'bignumber.js';
interface RateApi {
    getPrice: (symbol: string) => BigNumber;
    disconnect: () => Promise<void>;
}
declare enum AssetCode {
    Btc = "BTC",
    Eth = "ETH",
    Xrp = "XRP",
    Usd = "USD"
}
interface AssetUnit {
    unit: number;
    symbol: AssetCode;
    amount: BigNumber;
    pluginBase: number;
    exchangeUnit: number;
}
declare const eth: (amount?: string | number | BigNumber | undefined) => AssetUnit;
declare const gwei: (amount?: string | number | BigNumber | undefined) => AssetUnit;
declare const wei: (amount?: string | number | BigNumber | undefined) => AssetUnit;
declare const xrp: (amount?: string | number | BigNumber | undefined) => AssetUnit;
declare const drop: (amount?: string | number | BigNumber | undefined) => AssetUnit;
declare const xrpBase: (amount?: string | number | BigNumber | undefined) => AssetUnit;
declare const btc: (amount?: string | number | BigNumber | undefined) => AssetUnit;
declare const satoshi: (amount?: string | number | BigNumber | undefined) => AssetUnit;
declare const usd: (amount?: string | number | BigNumber | undefined) => AssetUnit;
declare const convert: (source: AssetUnit, dest: AssetUnit, apiOrRate?: BigNumber | RateApi | undefined) => BigNumber;
export { connectCoinCap, RateApi, convert, AssetUnit, btc, satoshi, eth, gwei, wei, xrp, drop, xrpBase, usd };
